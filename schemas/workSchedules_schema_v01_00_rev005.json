{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "WorkSchedules",
  "description": "Collection of the work schedules applicable to a single employee or multiple team members",
  "type": "object",
  "additionalProperties": false,
  "properties": {
    "workSchedules": {
      "type": "array",
      "items": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "itemID": {
            "description": "The unique identifier of the related schedule within a collection",
            "$ref": "#/definitions/itemIDType_v01"
          },
          "scheduleID": {
            "description": "A unique identification of the schedule",
            "$ref": "#/definitions/simpleIDType_v02"
          },
          "scheduleName": {
            "description": "A descriptive name of the schedule",
            "type": "string"
          },
          "associateOID": {
            "description": "A unique identifier of a worker the schedule is related to",
            "$ref": "#/definitions/associateOIDType_v02"
          },
          "workerName": {
            "description": "The name of the employee the schedule request is made for",
            "$ref": "#/definitions/contactNameType_v02"
          },
          "workAssignmentID": {
            "description": "A unique identification of the worker work assignment",
            "$ref": "#/definitions/simpleIDType_v02"
          },
          "clockReferenceDateTime": {
            "description": "Clock reference to be used to record time.  This allows the application to synchronize its time with that of the server.  Following ISO-8601:2000 specification",
            "$ref": "#/definitions/dateTimeType_v01"
          },
          "schedulePeriod": {
            "description": "A date period the schedule covers",
            "$ref": "#/definitions/datePeriodType_v01"
          },
          "scheduleDays": {
            "description": "A collection of days within the schedule",
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "itemID": {
                  "$ref": "#/definitions/itemIDType_v01"
                },
                "daySequenceNumber": {
                  "description": "A day sequence in the schedule",
                  "$ref": "#/definitions/sequenceType_v01"
                },
                "dayOfWeekCode": {
                  "description": "A day of week, e.g,, Mon, Tue, etc.",
                  "$ref": "#/definitions/codeType_v02"
                },
                "scheduleDayDate": {
                  "description": "A date identifying the schedule day",
                  "$ref": "#/definitions/dateType_v01"
                },
                "scheduleEntries": {
                  "description": "A collection of entries within a single day, e.g. shifts, paycode entries, etc.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "entryTypeCode": {
                        "description": "The type of an entry, depending on the context, e.g. shift vs. paycode, overtime / extra work type, etc.",
                        "$ref": "#/definitions/codeType_v02"
                      },
                      "payCode": {
                        "description": "The type of payroll item (e.g. paycode) applicable to the time entry, e.g. vacation, personal, etc.",
                        "$ref": "#/definitions/codeType_v02"
                      },
                      "entryStatusCode": {
                        "description": "The status of the entry",
                        "$ref": "#/definitions/statusType_v02"
                      },
                      "dateTimePeriod": {
                        "$ref": "#/definitions/dateTimePeriodType_v01"
                      },
                      "datePeriod": {
                        "$ref": "#/definitions/datePeriodType_v02"
                      },
                      "totalQuantity": {
                        "description": "The total quantity of of the time expressed in the units as per unit type",
                        "$ref": "#/definitions/quantityTimeType_v02"
                      },
                      "totalTime": {
                        "description": "Total time represented as hh:mm",
                        "type": "object",
                        "additionalProperties": false,
                        "title": "TotalTimeEntry",
                        "properties": {
                          "timeValue": {
                            "$ref": "#/definitions/timeType_v01"
                          },
                          "nameCode": {
                            "$ref": "#/definitions/codeType_v02"
                          }
                        }
                      },
                      "durationTypeCode": {
                        "description": "The permissable duration type which only go with the entryTypeCode = datePeriodStartTimeDuration",
                        "$ref": "#/definitions/codeType_v02"
                      },
                      "categoryTypeCode": {
                        "description": "The entry type, e.g. shift, paycode, etc.",
                        "$ref": "#/definitions/codeType_v02"
                      },
                      "dayPeriodCode": {
                        "description": "Used when the day period associated to an earning code, e.g. morning, day, evening, etc.",
                        "$ref": "#/definitions/codeType_v02"
                      },
                      "shiftTypeCode": {
                        "description": "Regular, Break, Transfer, Unavailable and Off",
                        "$ref": "#/definitions/codeType_v02"
                      },
                      "duration": {
                        "$ref": "#/definitions/durationType_v01"
                      },
                      "earningAllocations": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "title": "EarningAllocationType",
                          "additionalProperties": false,
                          "properties": {
                            "allocationCode": {
                              "description": "The code identifying the allocation",
                              "$ref": "#/definitions/codeType_v02"
                            },
                            "allocationTypeCode": {
                              "description": "The type of allocation",
                              "$ref": "#/definitions/codeType_v02"
                            },
                            "itemID": {
                              "$ref": "#/definitions/itemIDType_v01"
                            }
                          }
                        }
                      },
                      "entryComments": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "textValue": {
                              "description": "The text entered by the user",
                              "type": "string"
                            },
                            "commentTypeCode": {
                              "description": "The comment type",
                              "$ref": "#/definitions/codeType_v02"
                            },
                            "appliesToCode": {
                              "description": "The scope identifier, the note applies to",
                              "$ref": "#/definitions/codeType_v02"
                            },
                            "privateIndicator": {
                              "description": "The private note indicator",
                              "$ref": "#/definitions/indicatorType_v01"
                            },
                            "itemID": {
                              "$ref": "#/definitions/itemIDType_v01"
                            }
                          }
                        }
                      },
                      "scheduleEntryID": {
                        "description": "A unique identification of the entry",
                        "$ref": "#/definitions/simpleIDType_v02"
                      },
                      "shiftGroupID": {
                        "description": "Shift group identifier to group schedule entries under single shift",
                        "$ref": "#/definitions/simpleIDType_v02"
                      },
                      "overrideWholeShiftIndicator": {
                        "$ref": "#/definitions/indicatorType_v01"
                      },
                      "overridePartialShiftIndicator": {
                        "$ref": "#/definitions/indicatorType_v01"
                      },
                      "actions": {
                        "description": "Actions which the user is allowed to initiate against the related time off request entry",
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/actionType_v02"
                        }
                      },
                      "payCodeCategory": {
                        "$ref": "#/definitions/codeType_v02"
                      },
                      "entryTags": {
                        "additionalProperties": false,
                        "type": "object",
                        "description": "This is genric object which can be use forvarious purpose.  e.g employee job in organzational map",
                        "properties": {
                          "tagCode": {
                            "description": "A code identifying a tag",
                            "type": "string"
                          },
                          "tagType": {
                            "description": "The type of tag",
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                              "dataTypeCode": {
                                "description": "Code identifying the type of data",
                                "type": "string"
                              },
                              "currencyCode": {
                                "description": "List of standard currency codes ISO 4212",
                                "$ref": "#/definitions/simpleCodeType_v02"
                              },
                              "formatCode": {
                                "description": "The format of the property.  Possible values are date, date-time, uri",
                                "type": "string"
                              }
                            }
                          },
                          "tagValues": {
                            "description": "The the values for the given instance",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "scheduledHours": {
                  "description": "The total number of hours per given schedule day",
                  "$ref": "#/definitions/standardHoursType_v02"
                },
                "appliedTempateID": {
                  "description": "A unique identification of the template applied if any",
                  "$ref": "#/definitions/simpleIDType_v02"
                },
                "actions": {
                  "description": "Actions which the user is allowed to initiate against the related time off request entry",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/actionType_v02"
                  }
                }
              }
            }
          },
          "scheduledHours": {
            "description": "The total number of hours per given schedule",
            "$ref": "#/definitions/standardHoursType_v02"
          },
          "appliedTemplateID": {
            "description": "A unique identification of the template applied if any",
            "$ref": "#/definitions/simpleIDType_v02"
          },
          "actions": {
            "description": "Actions which the user is allowed to initiate against the related time off request entry",
            "type": "array",
            "items": {
              "$ref": "#/definitions/actionType_v02"
            }
          },
          "links": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/linkType_v02"
            }
          }
        }
      }
    },
    "meta": {
      "description": "Meta contains the metadata associated with a response.  A GET response may include metadata to support pagination",
      "$ref": "#/definitions/metaType_v02"
    },
    "confirmMessage": {
      "$ref": "#/definitions/confirmMessageType_v01"
    }
  },
  "definitions": {
    "itemIDType_v01": {
      "description": "The unique identifier of the object in a collection",
      "$ref": "#/definitions/simpleIDType_v02"
    },
    "simpleIDType_v02": {
      "description": "The simple (string) identifier of an object",
      "type": "string"
    },
    "associateOIDType_v02": {
      "description": "The unique identifier of an assoicate",
      "$ref": "#/definitions/simpleIDType_v02"
    },
    "contactNameType_v02": {
      "description": "The name of the contact",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "givenName": {
          "description": "The first name of the person",
          "type": "string"
        },
        "middleName": {
          "description": "Person middle name or initial",
          "type": "string"
        },
        "familyName1": {
          "description": "Person family name 1",
          "type": "string"
        },
        "familyName2": {
          "description": "Person family name 2",
          "type": "string"
        },
        "formattedName": {
          "description": "A formatted version of the person name",
          "type": "string"
        }
      }
    },
    "dateTimeType_v01": {
      "description": "The string reprersentation of the date-time value. Follows the ISO-8601:2000 format",
      "type": "string",
      "format": "date-time"
    },
    "datePeriodType_v01": {
      "description": "The string reprersentation of the date range. Used to specify effective period.  Follows the ISO-8601:2000 format",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "startDate": {
          "$ref": "#/definitions/dateType_v01"
        },
        "endDate": {
          "$ref": "#/definitions/dateType_v01"
        }
      }
    },
    "dateType_v01": {
      "description": "The string representation of the date value. Follows the ISO-8601:2000 format",
      "type": "string",
      "format": "date"
    },
    "sequenceType_v01": {
      "description": "Sequence of a related entity when included in the collection or a group",
      "type": "integer"
    },
    "codeType_v02": {
      "description": "The code for the related entity.  If this is a coded value, codeValue and shortName should be used. If this is just a string value, only shortName is necessary",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "statusType_v02": {
      "description": "Status to include the status code and effective date (ISO-8601:2000 format)",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "codeValue": {
          "description": "The code for the related entity",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "effectiveDate": {
          "$ref": "#/definitions/dateType_v01"
        }
      }
    },
    "dateTimePeriodType_v01": {
      "description": "The string reprersentation of the date range. Used to specify effective period.  Follows the ISO-8601:2000 format.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "startDateTime": {
          "$ref": "#/definitions/dateTimeType_v01"
        },
        "endDateTime": {
          "$ref": "#/definitions/dateTimeType_v01"
        }
      }
    },
    "datePeriodType_v02": {
      "description": "The string reprersentation of the date range. Used to specify effective period.  Follows the ISO-8601:2000 format",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "startDate": {
          "$ref": "#/definitions/dateType_v01"
        },
        "startTime": {
          "description": "The startTime represented as hh:mm. This is communicated in military notation and presented in the UI based on the timeNotationCode",
          "type": "string"
        },
        "endDate": {
          "$ref": "#/definitions/dateType_v01"
        },
        "endTime": {
          "description": "The endTime represented as hh:mm. This is communicated in military notation and presented in the UI based on the timeNotationCode. ",
          "type": "string"
        }
      }
    },
    "quantityTimeType_v02": {
      "description": "Quantity of time (unit based)",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "quantityValue": {
          "description": "Quantity value",
          "type": "number"
        },
        "unitTimeCode": {
          "description": "Units the quantity is based upon",
          "$ref": "#/definitions/codeType_v02"
        }
      }
    },
    "timeType_v01": {
      "description": "The string reprersentation of the time value usually expressed as hh:mm",
      "type": "string"
    },
    "durationType_v01": {
      "description": "Represents the duration of time as represented by ISO 8601. Where the value space is a six dimensional space where the coordinates designate the Gregorian year, month, day, hour, minute, and second. The number of seconds can include decimal digits to arbitary pecision. PnYn MnDTnH nMnS, where: [n] is replaced by the value for each of the date and time elements that follow the [n]. Leading zeros are not required, but the maximum number of digits for each element should be agreed to by the communicating parties. The capital letters 'P', 'Y', 'M', 'W', 'D', 'T', 'H', 'M', and 'S' are designators for each of the date and time elements and are not replaced. P is the duration designator (historically called 'period') placed at the start of the duration representation. Y is the year designator that follows the value for the number of years. M is the month designator that follows the value for the number of months. D is the day designator that follows the value for the number of days. T is the time designator that precedes the time components of the representation. H is the hour designator that follows the value for the number of hours. M is the minute designator that follows the value for the number of minutes. S is the second designator that follows the value for the number of seconds. The number of seconds can include decimal digits to arbitrary precision",
      "type": "string"
    },
    "indicatorType_v01": {
      "description": "Boolean expression",
      "type": "boolean"
    },
    "actionType_v02": {
      "description": "Actions which the user is allowed to initiate against the related entity",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "operationID": {
          "description": "Identifies the operation of an action",
          "type": "string"
        },
        "canonicalUri": {
          "description": "A unique identifier of the feature/function/operation",
          "$ref": "#/definitions/URIType_v01"
        },
        "actionTypeCode": {
          "description": "Identifies the type of action to be taken to fulfill the request.  Action can be a callback to a service to complete the action.  A callback requires the methodCode and uris to be returned.  An external link i.e. open a web page - requires the uris of the external link; An object reference is a reference to a related object within the application.  This is a canonical name which represents the object.  Based on this identifier, the application knows what view it needs to open.  The uris returns the data for the view.  For an object reference, the objectRefID, methodCode, and uris are required . modify indicates that a property is being modified",
          "type": "string",
          "enum": [
            "callback",
            "externalLink",
            "objectReference",
            "modify"
          ]
        },
        "confirmationRequiredIndicator": {
          "description": "True indicates that the application will prompt the user to confirm the action before it takes the action. False indicates that the action will be executed once selected by the user.",
          "$ref": "#/definitions/indicatorDefaultType_v01"
        },
        "commentAllowedIndicator": {
          "description": "True indicates that the SOR supports adding a comment when taking an action.",
          "$ref": "#/definitions/indicatorDefaultType_v01"
        },
        "defaultIndicator": {
          "description": "True indicates that this is the default action",
          "$ref": "#/definitions/indicatorDefaultType_v01"
        },
        "sequence": {
          "description": "Sequence indicates that the item in the array must be in a sequence in relation to the other items in the sequence.  The action must not ocurr before another action with a lower sequence",
          "$ref": "#/definitions/sequenceType_v01"
        },
        "attestation": {
          "description": "Optional text provided to the user when they take an action to affirm to be correct, true, or genuine. Requires confirmation indicator to be set to true.",
          "$ref": "#/definitions/attestationType_v02"
        },
        "links": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "URIType_v01": {
      "description": "The URI of the related entity",
      "type": "string",
      "format": "uri"
    },
    "indicatorDefaultType_v01": {
      "description": "Boolean expression",
      "type": "boolean",
      "default": false
    },
    "attestationType_v02": {
      "description": "Optional text provided to the user when they take an action to affirm to be correct, true, or genuine. Requires confirmation indicator to be set to true",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "actionBlockIndicator": {
          "description": "Action blocking flag.  True indicates that the user must acknowledge the text as specified in the attestation message, before the action can be taken.  False indicates that the action will be executed once selected by the user.",
          "$ref": "#/definitions/indicatorDefaultType_v01"
        },
        "messageTxt": {
          "description": "Message to present to the user.  This is mutuallly exclusive with the messageUri which is an external link to the message.  If the text is sizable and fairly static then it should be an external link which may be cached",
          "type": "string"
        },
        "messageUri": {
          "description": "URI of the attestation message, should be used instead of the messageTxt property if it can be cached",
          "$ref": "#/definitions/URIType_v01"
        }
      }
    },
    "linkType_v02": {
      "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "href": {
          "$ref": "#/definitions/URIType_v01"
        },
        "rel": {
          "description": "Indicates the nature of the relationship of the related resource to the resource that generated this representation",
          "type": "string",
          "enum": [
            "alternate",
            "create",
            "canonical",
            "describedby",
            "edit-form",
            "enclosure",
            "full",
            "related",
            "root",
            "self",
            "up",
            "search",
            "first",
            "last",
            "next",
            "previous",
            "/adp/invoke",
            "/adp/image",
            "/adp/confirm-message",
            "/adp/status-monitor",
            "/adp/codelist",
            "/adp/template",
            "/adp/externalLink",
            "/adp/validation",
            "/adp/deeplink",
            "/adp/attachment",
            "/adp/workflow"
          ]
        },
        "canonicalUri": {
          "description": "A unique identifier of the feature/function/operation, the link poins to",
          "$ref": "#/definitions/URIType_v01"
        },
        "title": {
          "description": "This property defines a title for the link.  The value must be a string. User agents MAY use this title when presenting the link to the user",
          "type": "string"
        },
        "targetSchema": {
          "description": "This property is a schema that defines the expected structure of the JSON representation of the target of the link, if the target of the link is returned using JSON representation",
          "type": "string"
        },
        "mediaType": {
          "description": "The media type that the linked resource will return (Response)",
          "type": "string",
          "enum": [
            "application/gzip",
            "application/json",
            "application/msword",
            "application/pdf",
            "application/postscript",
            "application/vnd.ms-excel",
            "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
            "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
            "application/xml",
            "application/x-www-form-urlencoded",
            "image/gif",
            "image/jpeg",
            "image/png",
            "image/tiff",
            "multipart/mixed",
            "text/html",
            "text/plain",
            "application/vnd.visio",
            "image/bmp",
            "image/x-ms-bmp",
            "application/vnd.openxmlformats-officedocument.presentationml.presentation",
            "application/vnd.ms-powerpoint",
            "video/mp4",
            "audio/mpeg",
            "video/x-msvideo",
            "video/x-ms-wmv",
            "application/rtf",
            "application/vnd.ms-outlook",
            "text/csv",
            "video/quicktime",
            "application/zip",
            "application/illustrator",
            "text/xml"
          ]
        },
        "method": {
          "description": "The HTTP method code (HTTP Verb) traverse the link (GET, POST, PUT or DELETE)",
          "type": "string",
          "enum": [
            "GET",
            "POST",
            "DELETE",
            "PUT"
          ]
        },
        "encType": {
          "description": "If present, this property indicates a query media type format that the server supports for querying or posting to the collection of instances at the target resource.  The query can be suffixed to the target URI to query the collection with property-based constraints on the resources that SHOULD be returned from the server or used to post data to the resource (depending on the method). (Request)",
          "type": "string",
          "enum": [
            "application/json",
            "application/x-www-form-urlencoded"
          ]
        },
        "schema": {
          "description": "This property contains a schema which defines the acceptable structure of the submitted request.  For a GET request, this schema would define the properties for the query string and for a POST request, this would define the body",
          "type": "string"
        },
        "payLoadArguments": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "argumentPath": {
                "description": "Code value (typically a key field) of the code list item",
                "type": "string"
              },
              "argumentValue": {
                "description": "Code value (typically a key field) of the code list item",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "simpleCodeType_v02": {
      "description": "A simple (string) code.  Can have a code list reference",
      "type": "string"
    },
    "standardHoursType_v02": {
      "description": "The standard number of hours of work associated to a position, typically used to drive the definition of a full time assignment, e.g. 40 in the US, 37.5 in the UK, 35 in FR. This number is usually expressed based on a week. The unitCode is used to convey that measurement.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "hoursQuantity": {
          "description": "The number of hours",
          "type": "number"
        },
        "unitCode": {
          "description": "The unit associated to the number of hours, e.g. week.",
          "$ref": "#/definitions/codeType_v02"
        }
      }
    },
    "metaType_v02": {
      "description": "Meta contains the metadata associated with a response.  A GET response may include metadata to support pagination",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "startSequence": {
          "description": "The instance resource sequence (number) identifying the first resource returned in the response. The server generates this sequence.  It is used by the client to determine the start sequence of the subsequent Get request",
          "$ref": "#/definitions/sequenceType_v01"
        },
        "completeIndicator": {
          "description": "Indicates whether the response completes the return of all of the resources of the instance resource set to the requesting system",
          "$ref": "#/definitions/indicatorType_v01"
        },
        "totalNumber": {
          "description": "Number of total instance resources in an instance resource set. Note: An instance resource set is a set of instance resources that is determined by a server to satisfy the sets membership criteria (i.e., selection, filter, expansion and search criteria) of a resource management operation (e.g. GET request) upon a collection resource",
          "type": "integer"
        },
        "resourceSetID": {
          "description": "Unique identifier of the instance resource set.  It is generated by the server as a result of the original Get request",
          "$ref": "#/definitions/simpleIDType_v02"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links",
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    },
    "confirmMessageType_v01": {
      "description": "The ConfirmMessage contains the processing results for the corresponding request.  A request may have its processing reported as: succeeded, partially failed, or failed.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "confirmMessageID": {
          "description": "An identifier for the instance of the confirm message.",
          "$ref": "#/definitions/IDType_v01"
        },
        "createDateTime": {
          "description": "The date & time that the message instance was generated.; follows the ISO-8601:2000 format: 2008-05-11T15:30:00-06:00.",
          "$ref": "#/definitions/dateTimeType_v01"
        },
        "requestReceiptDateTime": {
          "description": "The date & time that the request submitted by the client was received. Note, this timestamp may not be the same as the time the client actually submitted the request if there is a queuing mechanism between the client and server processing the request; it follows the ISO-8601:2000 format: 2008-05-11T15:30:00-06:00.",
          "$ref": "#/definitions/dateTimeType_v01"
        },
        "protocolStatusCode": {
          "description": "Protocol-specific response status code.",
          "$ref": "#/definitions/codeType_v01"
        },
        "protocolCode": {
          "description": "Code that identifies the protocol used for the request.",
          "$ref": "#/definitions/codeType_v01"
        },
        "requestID": {
          "description": "The identifier of the request that generated this response.",
          "$ref": "#/definitions/IDType_v01"
        },
        "requestStatusCode": {
          "description": "The process results status code for the request.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "shortName": {
              "description": "Short description of the related code",
              "type": "string"
            },
            "longName": {
              "description": "Long description of the related code",
              "type": "string"
            },
            "codeValue": {
              "description": "The code for the related entity.",
              "type": "string",
              "enum": [
                "succeeded",
                "partiallyFailed",
                "failed"
              ]
            }
          }
        },
        "requestMethodCode": {
          "description": "The method that was used on the request corresponding to this message instance.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "shortName": {
              "description": "Short description of the related code",
              "type": "string"
            },
            "longName": {
              "description": "Long description of the related code",
              "type": "string"
            },
            "codeValue": {
              "description": "The code for the related entity.",
              "type": "string",
              "enum": [
                "GET",
                "PUT",
                "POST",
                "PATCH",
                "DELETE"
              ]
            }
          }
        },
        "sessionID": {
          "description": "A session identifier if one is available.",
          "$ref": "#/definitions/IDType_v01"
        },
        "requestETag": {
          "description": "The entity tag of the entity in the request.",
          "type": "string"
        },
        "requestLink": {
          "description": "The link of the request that generated this response.",
          "$ref": "#/definitions/linkType_v02"
        },
        "processingStatusCode": {
          "description": "Processing status of the related request message.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "shortName": {
              "description": "Short description of the related code",
              "type": "string"
            },
            "longName": {
              "description": "Long description of the related code",
              "type": "string"
            },
            "codeValue": {
              "description": "The code for the related entity.",
              "type": "string",
              "enum": [
                "received",
                "validated",
                "started",
                "completed"
              ]
            }
          }
        },
        "processMessages": {
          "description": "processMessage is optional and contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).  Most often there will be a single instance for an associated request or resource, but this structure allows for more than one if needed, for example, if multiple errors exist for a single resource. ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/processMessage_v01"
          }
        },
        "resourceMessages": {
          "description": "resource Message contains the resource-specific processing results for resources being managed in the request.  A resource may have its processing reported as:  succeeded or failed.  It must be used to represent resource-specific messages.  In the case of a request managing multiple resources and resource-specific messages are to be returned, then this array will contain one object for each such resource of the request.",
          "type": "array",
          "items": {
            "description": "Each object contains detailed information for a resource referenced in the original request.",
            "type": "object",
            "properties": {
              "resourceMessageID": {
                "description": "An identifier for the instance of the resource message.",
                "$ref": "#/definitions/IDType_v01"
              },
              "resourceStatusCode": {
                "description": "The processing results status code of the resource of the request.",
                "type": "object",
                "additionalProperties": false,
                "title": "ResourceMessageResourceStatus",
                "properties": {
                  "shortName": {
                    "description": "Short description of the related code",
                    "type": "string"
                  },
                  "longName": {
                    "description": "Long description of the related code",
                    "type": "string"
                  },
                  "codeValue": {
                    "description": "The code for the related entity.",
                    "type": "string",
                    "enum": [
                      "succeeded",
                      "failed",
                      "warning"
                    ]
                  }
                }
              },
              "resourceLink": {
                "description": "The link of the request that generated this response.",
                "$ref": "#/definitions/linkType_v02"
              },
              "processMessages": {
                "description": "processMessage is optional and contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).  Most often there will be a single instance for an associated request or resource, but this structure allows for more than one if needed, for example, if multiple errors exist for a single resource. ",
                "type": "array",
                "items": {
                  "title": "ProcessMessageWithResourceStatusCode",
                  "description": "Each object contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).",
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "processMessageID": {
                      "description": "An identifier for the instance of the process message.",
                      "$ref": "#/definitions/IDType_v01"
                    },
                    "messageTypeCode": {
                      "description": "Process Message instances may be of type: success, warning, error, or info.",
                      "$ref": "#/definitions/messageTypeCodeType_v01"
                    },
                    "sourceLocationExpression": {
                      "description": "Expression that provides the location (or source) of content in a message instance that is associated with a process message. Examples of expression languages include: XPath, XQuery, JSON Pointer.",
                      "type": "string"
                    },
                    "expressionLanguageCode": {
                      "description": "Identifies the language used for expressions communicated in this message.",
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "shortName": {
                          "description": "Short description of the related code",
                          "type": "string"
                        },
                        "longName": {
                          "description": "Long description of the related code",
                          "type": "string"
                        },
                        "codeValue": {
                          "description": "The code for the related entity.",
                          "type": "string",
                          "enum": [
                            "jPath"
                          ]
                        }
                      }
                    },
                    "links": {
                      "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/linkType_v02"
                      }
                    },
                    "userMessage": {
                      "description": "Message returned to the user",
                      "$ref": "#/definitions/messageType_v01"
                    },
                    "developerMessage": {
                      "description": "Message returned to the user",
                      "$ref": "#/definitions/messageType_v01"
                    },
                    "resourceStatusCode": {
                      "description": "DEPRECATED - Use messageTypeCode instead. The processing results status code of the resource of the request.",
                      "$ref": "#/definitions/codeType_v01"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "IDType_v01": {
      "description": "The unique identifier of the related entity ",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "idValue": {
          "description": "An ID",
          "type": "string"
        },
        "schemeName": {
          "description": "The type of ID",
          "type": "string"
        },
        "schemeAgencyName": {
          "description": "The agency that issues the ID",
          "type": "string"
        }
      }
    },
    "codeType_v01": {
      "description": "The code for the related entity",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string"
        },
        "shortName": {
          "description": "Short description of the related code not to exceed 25 characters",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        }
      }
    },
    "processMessage_v01": {
      "description": "Each object contains processing information for either the request (at the ConfirmMessage level) or a resource being managed in the request (at the ResourceMessage level).",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "processMessageID": {
          "description": "An identifier for the instance of the process message.",
          "$ref": "#/definitions/IDType_v01"
        },
        "messageTypeCode": {
          "description": "Process Message instances may be of type: success, warning, error, or info.",
          "$ref": "#/definitions/messageTypeCodeType_v01"
        },
        "sourceLocationExpression": {
          "description": "Expression that provides the location (or source) of content in a message instance that is associated with a process message. Examples of expression languages include: XPath, XQuery, JSON Pointer.",
          "type": "string"
        },
        "expressionLanguageCode": {
          "description": "Identifies the language used for expressions communicated in this message.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "shortName": {
              "description": "Short description of the related code",
              "type": "string"
            },
            "longName": {
              "description": "Long description of the related code",
              "type": "string"
            },
            "codeValue": {
              "description": "The code for the related entity.",
              "type": "string",
              "enum": [
                "jPath"
              ]
            }
          }
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        },
        "userMessage": {
          "description": "Message returned to the user",
          "$ref": "#/definitions/messageType_v01"
        },
        "developerMessage": {
          "description": "Message returned to the user",
          "$ref": "#/definitions/messageType_v01"
        }
      }
    },
    "messageTypeCodeType_v01": {
      "description": "Schema describing the type of the user or developer message",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "shortName": {
          "description": "Short description of the related code",
          "type": "string"
        },
        "longName": {
          "description": "Long description of the related code",
          "type": "string"
        },
        "codeValue": {
          "description": "The code for the related entity.",
          "type": "string",
          "enum": [
            "success",
            "warning",
            "error",
            "info"
          ]
        }
      }
    },
    "messageType_v01": {
      "description": "Representation of a message.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "codeValue": {
          "description": "The code associated with the message description.",
          "type": "string"
        },
        "title": {
          "description": "Title of the message description.",
          "type": "string"
        },
        "messageTxt": {
          "description": "The value/content of the message description.",
          "type": "string"
        },
        "links": {
          "description": "A link description object is used to describe link relations.  In the context of a schema, it defines the link relations of the instances of the schema, and can be parameterized by the instance values.  The link description format can be used on its own in regular (non-schema documents), and use of this format can be declared by referencing the normative link description schema as the the schema for the data structure that uses the links.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/linkType_v02"
          }
        }
      }
    }
  }
}